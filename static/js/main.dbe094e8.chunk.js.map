{"version":3,"sources":["components/Skills.js","components/Experience.js","components/Info.js","components/App.js","serviceWorker.js","index.js"],"names":["Skills","react_default","a","createElement","Fragment","jobs","id","title","company","period","description","achievements","Experience","className","map","job","key","Icon","sty","iconName","styles","fontSize","length","ach","i","Info","tabKeys","skills","experience","cardDetails","imageUrl","imageInitials","text","secondaryText","App","state","activeTab","getTabContent","tabKey","components_Skills","info","components_Info","handleLinkClick","tab","_this","setState","props","itemKey","this","Persona","Object","assign","size","PersonaSize","size72","presence","PersonaPresence","online","Pivot","selectedKey","linkSize","PivotLinkSize","normal","linkFormat","PivotLinkFormat","links","onLinkClick","headersOnly","PivotItem","headerText","Component","Boolean","window","location","hostname","match","loadTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","initializeIcons","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dbe094e8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Skills = () => <>\r\n  <p>\r\n    .NET Full-Stack Developer with 3.5 years of experience, open to othertechnologies such as NodeJs.\r\n    Passion for automation, manual effort reduction, DevOps methodologies and tools.\r\n    Experience in ChatOps and using Artificial Inteligence services.\r\n    Can work in small and large teams distributedin different locations and timezones.\r\n  </p>\r\n  <p>\r\n    .NET Full-Stack Developer with 3.5 years of experience, open to othertechnologies such as NodeJs.\r\n    Passion for automation, manual effort reduction, DevOps methodologies and tools.\r\n    Experience in ChatOps and using Artificial Inteligence services.\r\n    Can work in small and large teams distributedin different locations and timezones.\r\n  </p>\r\n  <p>\r\n    .NET Full-Stack Developer with 3.5 years of experience, open to othertechnologies such as NodeJs.\r\n    Passion for automation, manual effort reduction, DevOps methodologies and tools.\r\n    Experience in ChatOps and using Artificial Inteligence services.\r\n    Can work in small and large teams distributedin different locations and timezones.\r\n  </p>\r\n  <p>\r\n    .NET Full-Stack Developer with 3.5 years of experience, open to othertechnologies such as NodeJs.\r\n    Passion for automation, manual effort reduction, DevOps methodologies and tools.\r\n    Experience in ChatOps and using Artificial Inteligence services.\r\n    Can work in small and large teams distributedin different locations and timezones.\r\n  </p>\r\n  <p>\r\n    .NET Full-Stack Developer with 3.5 years of experience, open to othertechnologies such as NodeJs.\r\n    Passion for automation, manual effort reduction, DevOps methodologies and tools.\r\n    Experience in ChatOps and using Artificial Inteligence services.\r\n    Can work in small and large teams distributedin different locations and timezones.\r\n  </p>\r\n  <p>\r\n    .NET Full-Stack Developer with 3.5 years of experience, open to othertechnologies such as NodeJs.\r\n    Passion for automation, manual effort reduction, DevOps methodologies and tools.\r\n    Experience in ChatOps and using Artificial Inteligence services.\r\n    Can work in small and large teams distributedin different locations and timezones.\r\n  </p>\r\n  <p>\r\n    .NET Full-Stack Developer with 3.5 years of experience, open to othertechnologies such as NodeJs.\r\n    Passion for automation, manual effort reduction, DevOps methodologies and tools.\r\n    Experience in ChatOps and using Artificial Inteligence services.\r\n    Can work in small and large teams distributedin different locations and timezones.\r\n  </p>\r\n  <p>\r\n    .NET Full-Stack Developer with 3.5 years of experience, open to othertechnologies such as NodeJs.\r\n    Passion for automation, manual effort reduction, DevOps methodologies and tools.\r\n    Experience in ChatOps and using Artificial Inteligence services.\r\n    Can work in small and large teams distributedin different locations and timezones.\r\n  </p>\r\n</>\r\n\r\nexport default Skills\r\n","import React from 'react'\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nexport const jobs = [\r\n  {\r\n    id: 0,\r\n    title: '.NET SharePoint Developer',\r\n    company: 'DXC Technology',\r\n    period: '05/2018 - Present',\r\n    description: () => <p>\r\n      Current position at DXC. In May 2018, got an opportunity for a new position and moved to a SharePoint Development team where I plan, design, develop and deploy Microsoft SharePoint solutions for our biggest customers.\r\n      Working close with customers and collegues from around the globe.\r\n      <br />\r\n      <br />\r\n      Activities and projects: SharePoint hosted apps, provider hosted apps, remote apps, InfoPath forms, Windows Services, provisioning jobs, tenant management, custom actions, Power Bi reports, etc.\r\n    </p>,\r\n    achievements: []\r\n  }, {\r\n    id: 1,\r\n    title: '.NET Developer & Platform Support',\r\n    company: 'DXC Technology',\r\n    period: '04/2017 - 05/2018',\r\n    description: () => <p>\r\n      First position at DXC, same responsibilities as before becoming an employee (see below)\r\n      plus leading my own initiatives and other's for implementing DevOps methodologies in the team.\r\n    </p>,\r\n    achievements: [\r\n      'Reduced manual effort in around 60% and response times in 80%, which lead to positions reduction and increased profits for my organization.',\r\n      'Created a ChatBot to help customers in repetitive tasks such as raising support tickets and answering questions.'\r\n    ]\r\n  }, {\r\n    id: 2,\r\n    title: 'IT Engineer',\r\n    company: 'Softtek - HPE/DXC Account',\r\n    period: '10/2016 - 04/2017',\r\n    description: () => <>\r\n      <p>Responsibilities:</p>\r\n      <ul>\r\n        <li>Develop software solutions for internal team and customers in order to improve support ticket response time average.</li>\r\n        <li>L4 Support: Qlik View, Qlik Sense and Informatica.</li>\r\n      </ul>\r\n    </>,\r\n    achievements: [\r\n      \"Created tools to improve productivity and response time for the support team.\",\r\n      \"As contractor from Softtek in HPE account, I got an offer to become DXC employee after six months in the team (at the end of the HPE - DXC split).\"\r\n    ]\r\n  }, {\r\n    id: 3,\r\n    title: 'IT Engineer',\r\n    company: 'GTCO',\r\n    period: '08/2015 - 10/2016',\r\n    description: () => <>\r\n      <p>Responsibilities:</p>\r\n      <ul>\r\n        <li>Develop .NET solutions for company's apps and services (financial-related mostly).</li>\r\n        <li>Network administrator (Windows Server, Active Directory, Virtual Machines, Router, Switch, etc).</li>\r\n      </ul>\r\n    </>,\r\n    achievements: [\r\n      \"Built network infrastrucutre for home-hosted web applications accessible from intranet and internet.\"\r\n    ]\r\n  }\r\n]\r\n\r\nexport const Experience = (jobs) =>\r\n  <div className='experience'>\r\n    {jobs && jobs.map(job => (\r\n      <div className='position' key={job.id}>\r\n        <span className=\"period\"><Icon sty iconName=\"Clock\" styles={{ fontSize: '0.5em !important;' }} /> {job.period}</span>\r\n        <h4 className='ms-font-xl title'>{job.title}</h4>\r\n        <span className='company'><Icon sty iconName=\"POISolid\" styles={{ fontSize: '0.5em !important;' }} /> {job.company}</span>\r\n        <div className=\"description\"><job.description /></div>\r\n        {job.achievements && job.achievements.length > 0 &&\r\n          <div className=\"description\">\r\n            <span>Achievements:</span>\r\n            <ul>\r\n              {job.achievements.map((ach, i) => (<li key={i}>{ach}</li>))}\r\n            </ul>\r\n          </div>\r\n        }\r\n      </div>\r\n    ))}\r\n  </div>\r\n","import React from 'react'\r\n\r\nconst Info = () => <>\r\n  <p>\r\n    Personal Information\r\n  </p>\r\n\r\n</>\r\n\r\nexport default Info\r\n","import React, { Component } from 'react';\r\nimport { Persona, PersonaSize, PersonaPresence } from 'office-ui-fabric-react/lib/Persona';\r\nimport { PivotItem, Pivot, PivotLinkSize, PivotLinkFormat } from 'office-ui-fabric-react/lib/Pivot';\r\nimport Skills from './Skills'\r\nimport { Experience, jobs } from './Experience'\r\nimport Info from './Info'\r\nimport './App.scss';\r\n\r\nconst tabKeys = {\r\n  skills: 'skills',\r\n  experience: 'experience'\r\n}\r\n\r\nconst cardDetails = {\r\n  imageUrl: '/profile.jpg',\r\n  imageInitials: 'PS',\r\n  text: 'Paul Sancer',\r\n  secondaryText: '.NET Full-Stack Developer',\r\n  // tertiaryText: 'In a meeting',\r\n  // optionalText: 'Available at 4:00pm'\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    activeTab: tabKeys.experience\r\n  }\r\n\r\n  getTabContent = (tabKey) => {\r\n    switch (tabKey) {\r\n      case tabKeys.skills:\r\n        return <Skills />\r\n      case tabKeys.experience:\r\n        return Experience(jobs)\r\n      case tabKeys.info:\r\n        return <Info />\r\n      default: return ''\r\n    }\r\n  }\r\n\r\n  handleLinkClick = (tab) => {\r\n    this.setState({ activeTab: tab.props.itemKey })\r\n  }\r\n\r\n  render() {\r\n    const { activeTab } = this.state\r\n    return (\r\n      <>\r\n        <div className=\"bg-image\"></div>\r\n        <div className=\"App\">\r\n          <main>\r\n            <div className=\"App-header\">\r\n              <div className=\"container\">\r\n                <div className=\"profile\">\r\n                  <Persona\r\n                    {...cardDetails}\r\n                    size={PersonaSize.size72}\r\n                    presence={PersonaPresence.online}\r\n                  />\r\n                </div>\r\n                <Pivot selectedKey={activeTab} linkSize={PivotLinkSize.normal} linkFormat={PivotLinkFormat.links} className=\"tabs\" onLinkClick={this.handleLinkClick} headersOnly>\r\n                  <PivotItem headerText=\"Skills\" itemKey={tabKeys.skills} />\r\n                  <PivotItem headerText=\"Experience\" itemKey={tabKeys.experience} />\r\n                  <PivotItem headerText=\"Personal Info\" itemKey={tabKeys.info} />\r\n                </Pivot>\r\n              </div>\r\n            </div>\r\n            <div className=\"tab-content\">\r\n              {this.getTabContent(this.state.activeTab)}\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './components/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { initializeIcons } from '@uifabric/icons'\r\nimport { loadTheme } from 'office-ui-fabric-react'\r\n\r\nloadTheme({\r\n  palette: {\r\n    themePrimary: '#008272',\r\n    themeLighterAlt: '#f0faf9',\r\n    themeLighter: '#c5ebe7',\r\n    themeLight: '#98dad2',\r\n    themeTertiary: '#48b4a7',\r\n    themeSecondary: '#119182',\r\n    themeDarkAlt: '#007567',\r\n    themeDark: '#006357',\r\n    themeDarker: '#004940',\r\n    neutralLighterAlt: '#f8f8f8',\r\n    neutralLighter: '#f4f4f4',\r\n    neutralLight: '#eaeaea',\r\n    neutralQuaternaryAlt: '#dadada',\r\n    neutralQuaternary: '#d0d0d0',\r\n    neutralTertiaryAlt: '#c8c8c8',\r\n    neutralTertiary: '#c2c2c2',\r\n    neutralSecondary: '#858585',\r\n    neutralPrimaryAlt: '#4b4b4b',\r\n    neutralPrimary: '#333333',\r\n    neutralDark: '#272727',\r\n    black: '#1d1d1d',\r\n    white: '#ffffff'\r\n  }\r\n})\r\n\r\n// Register icons and pull the fonts from the default SharePoint CDN:\r\ninitializeIcons()\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}