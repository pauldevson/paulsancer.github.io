{"version":3,"sources":["components/App.js","serviceWorker.js","index.js"],"names":["tabKeys","skills","experience","info","cardDetails","imageUrl","imageInitials","text","secondaryText","App","state","activeTab","getTabContent","tabKey","react_default","a","createElement","Fragment","handleLinkClick","tab","_this","setState","props","itemKey","className","Persona","Object","assign","size","PersonaSize","size72","presence","PersonaPresence","online","Pivot","linkSize","PivotLinkSize","large","linkFormat","PivotLinkFormat","links","onLinkClick","this","PivotItem","headerText","Component","Boolean","window","location","hostname","match","loadTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","initializeIcons","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2SAOMA,SAAU,CACdC,OAAQ,SACRC,WAAY,aACZC,KAAM,SAGFC,EAAc,CAClBC,SAAU,eACVC,cAAe,KACfC,KAAM,eACNC,cAAe,6BAyEFC,6MAnEbC,MAAQ,CACNC,UAAW,YAGbC,cAAgB,SAACC,GACf,OAAQA,GACN,KAAKb,EAAQC,OACX,OAAQa,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACNH,EAAAC,EAAAC,cAAA,8GAEAF,EAAAC,EAAAC,cAAA,6FAGAF,EAAAC,EAAAC,cAAA,6EAGAF,EAAAC,EAAAC,cAAA,gGAIJ,KAAKhB,EAAQE,WACX,OAAOY,EAAAC,EAAAC,cAAA,+CACT,KAAKhB,EAAQG,KACX,OAAOW,EAAAC,EAAAC,cAAA,yDACT,QAAS,MAAO,OAIpBE,gBAAkB,SAACC,GACjBC,EAAKC,SAAS,CAAEV,UAAWQ,EAAIG,MAAMC,mFAIrC,OACET,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,OACbV,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,cACbV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACbV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,WACbV,EAAAC,EAAAC,cAACS,EAAA,EAADC,OAAAC,OAAA,GACMvB,EADN,CAEEwB,KAAMC,IAAYC,OAClBC,SAAUC,IAAgBC,WAM9BnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,SAAUC,IAAcC,MAAOC,WAAYC,IAAgBC,MAAOhB,UAAU,OAAOiB,YAAaC,KAAKxB,iBAC1GJ,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,WAAW,SAASrB,QAASvB,EAAQC,SAEhDa,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,WAAW,aAAarB,QAASvB,EAAQE,aACpDY,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,WAAW,gBAAgBrB,QAASvB,EAAQG,UAI7DW,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACbV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eACZkB,KAAK9B,cAAc8B,KAAKhC,MAAMC,sBA3D3BkC,aCVEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8ECVNC,YAAU,CACRC,QAAS,CACPC,aAAc,UACdC,gBAAiB,UACjBC,aAAc,UACdC,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,UACbC,kBAAmB,UACnBC,eAAgB,UAChBC,aAAc,UACdC,qBAAsB,UACtBC,kBAAmB,UACnBC,mBAAoB,UACpBC,gBAAiB,UACjBC,iBAAkB,UAClBC,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbC,MAAO,UACPC,MAAO,aAKXC,cAEAC,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAASC,SAASC,eAAe,SD2F3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7aff178b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n// import { Label } from 'office-ui-fabric-react/lib/Label';\r\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Persona, PersonaSize, PersonaPresence } from 'office-ui-fabric-react/lib/Persona';\r\nimport { PivotItem, Pivot, PivotLinkSize, PivotLinkFormat } from 'office-ui-fabric-react/lib/Pivot';\r\nimport './App.scss'\r\n\r\nconst tabKeys = {\r\n  skills: 'skills',\r\n  experience: 'experience',\r\n  info: 'info'\r\n}\r\n\r\nconst cardDetails = {\r\n  imageUrl: '/profile.jpg',\r\n  imageInitials: 'PS',\r\n  text: 'Paul Sanchez',\r\n  secondaryText: '.NET Full-Stack Developer',\r\n  // tertiaryText: 'In a meeting',\r\n  // optionalText: 'Available at 4:00pm'\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    activeTab: 'skills'\r\n  }\r\n\r\n  getTabContent = (tabKey) => {\r\n    switch (tabKey) {\r\n      case tabKeys.skills:\r\n        return (<>\r\n          <p>\r\n            .NET Full-Stack Developer with 3.5 years of experience, open to othertechnologies such as NodeJs.</p>\r\n          <p>\r\n            Passion for automation, manual effort reduction, DevOps methodologies and tools.\r\n          </p>\r\n          <p>\r\n            Experience in ChatOps and using Artificial Inteligence services.\r\n          </p>\r\n          <p>\r\n            Can work in small and large teams distributedin different locations and timezones.\r\n          </p>\r\n        </>)\r\n      case tabKeys.experience:\r\n        return <p>This is my experience lorem ipsum.</p>\r\n      case tabKeys.info:\r\n        return <p>This is my personal information lorem ipsum.</p>\r\n      default: return ''\r\n    }\r\n  }\r\n\r\n  handleLinkClick = (tab) => {\r\n    this.setState({ activeTab: tab.props.itemKey });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <main>\r\n          <div className=\"App-header\">\r\n            <div className=\"container\">\r\n              <div className=\"profile\">\r\n                <Persona\r\n                  {...cardDetails}\r\n                  size={PersonaSize.size72}\r\n                  presence={PersonaPresence.online}\r\n                />\r\n              </div>\r\n\r\n              {/* <h1 className=\"ms-font-su name\">Paul Sanchez</h1>\r\n              <small className=\"title\">.NET Full-Stack Developer</small> */}\r\n              <Pivot linkSize={PivotLinkSize.large} linkFormat={PivotLinkFormat.links} className=\"tabs\" onLinkClick={this.handleLinkClick}>\r\n                <PivotItem headerText=\"Skills\" itemKey={tabKeys.skills} />\r\n                {/* <PivotItem headerText=\"Summary\" itemKey={tabKeys.summary} /> */}\r\n                <PivotItem headerText=\"Experience\" itemKey={tabKeys.experience} />\r\n                <PivotItem headerText=\"Personal Info\" itemKey={tabKeys.info} />\r\n              </Pivot>\r\n            </div>\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"tab-content\">\r\n              {this.getTabContent(this.state.activeTab)}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeIcons } from '@uifabric/icons';\nimport { loadTheme } from 'office-ui-fabric-react';\n\nloadTheme({\n  palette: {\n    themePrimary: '#008272',\n    themeLighterAlt: '#f0faf9',\n    themeLighter: '#c5ebe7',\n    themeLight: '#98dad2',\n    themeTertiary: '#48b4a7',\n    themeSecondary: '#119182',\n    themeDarkAlt: '#007567',\n    themeDark: '#006357',\n    themeDarker: '#004940',\n    neutralLighterAlt: '#f8f8f8',\n    neutralLighter: '#f4f4f4',\n    neutralLight: '#eaeaea',\n    neutralQuaternaryAlt: '#dadada',\n    neutralQuaternary: '#d0d0d0',\n    neutralTertiaryAlt: '#c8c8c8',\n    neutralTertiary: '#c2c2c2',\n    neutralSecondary: '#858585',\n    neutralPrimaryAlt: '#4b4b4b',\n    neutralPrimary: '#333333',\n    neutralDark: '#272727',\n    black: '#1d1d1d',\n    white: '#ffffff',\n  }\n});\n\n// Register icons and pull the fonts from the default SharePoint CDN:\ninitializeIcons();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}